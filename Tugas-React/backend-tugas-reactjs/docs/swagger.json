{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for managing books.",
        "title": "Kuliahs API",
        "contact": {},
        "version": "1.0"
    },
    "host": "go-vercel-app-arasys-projects.vercel.app",
    "basePath": "/",
    "paths": {
        "/api/books": {
            "get": {
                "description": "Get a list of all books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Book"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book Request",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/books/{id}": {
            "get": {
                "description": "Get a single book by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a book by ID with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update an existing book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book Request",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/dosens": {
            "get": {
                "description": "Get a list of all dosen",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dosen"
                ],
                "summary": "Get all dosen",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Dosen"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new dosen with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dosen"
                ],
                "summary": "Create a new dosen",
                "parameters": [
                    {
                        "description": "Dosen Request",
                        "name": "dosen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dosen"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Dosen"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/dosens/{id}": {
            "put": {
                "description": "Update a dosen by ID with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dosen"
                ],
                "summary": "Update an existing dosen",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dosen ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dosen Request",
                        "name": "dosen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dosen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Dosen"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a dosen by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dosen"
                ],
                "summary": "Delete a dosen",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dosen ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/jadwals": {
            "get": {
                "description": "Get a list of all jadwals",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jadwals"
                ],
                "summary": "Get all jadwals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.JadwalKuliah"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new jadwal with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jadwals"
                ],
                "summary": "Create a new jadwal",
                "parameters": [
                    {
                        "description": "Jadwal Request",
                        "name": "jadwal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JadwalKuliahRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.JadwalKuliah"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/jadwals/{id}": {
            "get": {
                "description": "Get a single jadwal by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jadwals"
                ],
                "summary": "Get jadwal by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Jadwal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JadwalKuliah"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a jadwal by ID with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jadwals"
                ],
                "summary": "Update an existing jadwal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Jadwal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Jadwal Request",
                        "name": "jadwal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JadwalKuliahRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JadwalKuliah"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a jadwal by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jadwals"
                ],
                "summary": "Delete a jadwal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Jadwal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/mahasiswas": {
            "get": {
                "description": "Get a list of all mahasiswas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mahasiswas"
                ],
                "summary": "Get all mahasiswas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Mahasiswa"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new mahasiswa with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mahasiswas"
                ],
                "summary": "Create a new mahasiswa",
                "parameters": [
                    {
                        "description": "Mahasiswa Request",
                        "name": "mahasiswa",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Mahasiswa"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Mahasiswa"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/mahasiswas/{id}": {
            "get": {
                "description": "Get a single mahasiswa by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mahasiswas"
                ],
                "summary": "Get mahasiswa by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mahasiswa ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Mahasiswa"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a mahasiswa by ID with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mahasiswas"
                ],
                "summary": "Update an existing mahasiswa",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mahasiswa ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mahasiswa Request",
                        "name": "mahasiswa",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Mahasiswa"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Mahasiswa"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a mahasiswa by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mahasiswas"
                ],
                "summary": "Delete a mahasiswa",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mahasiswa ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/matakuliahs": {
            "get": {
                "description": "Get a list of all matakuliahs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matakuliahs"
                ],
                "summary": "Get all matakuliahs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MataKuliah"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new matakuliah with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matakuliahs"
                ],
                "summary": "Create a new matakuliah",
                "parameters": [
                    {
                        "description": "MataKuliah Request",
                        "name": "matakuliah",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MataKuliah"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.MataKuliah"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/matakuliahs/{id}": {
            "get": {
                "description": "Get a single matakuliah by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matakuliahs"
                ],
                "summary": "Get matakuliah by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MataKuliah ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MataKuliah"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a matakuliah by ID with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matakuliahs"
                ],
                "summary": "Update an existing matakuliah",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MataKuliah ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MataKuliah Request",
                        "name": "matakuliah",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MataKuliah"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MataKuliah"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a matakuliah by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matakuliahs"
                ],
                "summary": "Delete a matakuliah",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MataKuliah ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Book": {
            "type": "object",
            "required": [
                "description",
                "price",
                "release_year",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "release_year": {
                    "type": "integer"
                },
                "thickness": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_page": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.BookRequest": {
            "type": "object",
            "required": [
                "description",
                "price",
                "release_year",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "total_page": {
                    "type": "integer"
                }
            }
        },
        "models.Dosen": {
            "type": "object",
            "required": [
                "nama"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "matakuliah": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MataKuliah"
                    }
                },
                "matakuliah_id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.JadwalKuliah": {
            "type": "object",
            "required": [
                "nama"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dosen": {
                    "$ref": "#/definitions/models.Dosen"
                },
                "dosen_id": {
                    "type": "integer"
                },
                "hari": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jam_mulai": {
                    "type": "string"
                },
                "jam_selesai": {
                    "type": "string"
                },
                "mahasiswa": {
                    "$ref": "#/definitions/models.Mahasiswa"
                },
                "mahasiswa_id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.JadwalKuliahRequest": {
            "type": "object",
            "required": [
                "nama"
            ],
            "properties": {
                "dosen_id": {
                    "type": "integer"
                },
                "hari": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jam_mulai": {
                    "type": "string"
                },
                "jam_selesai": {
                    "type": "string"
                },
                "mahasiswa_id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "models.Mahasiswa": {
            "type": "object",
            "required": [
                "nama"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MataKuliah": {
            "type": "object",
            "required": [
                "nama"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}